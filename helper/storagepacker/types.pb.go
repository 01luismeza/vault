// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helper/storagepacker/types.proto

package storagepacker

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Item represents a entry that gets inserted into the storage packer
type Item struct {
	// ID is the UUID to identify the item
	ID string `sentinel:"" protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// message is the contents of the item
	Message              *any.Any `sentinel:"" protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0e98c66c4f51b7f, []int{0}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Item) GetMessage() *any.Any {
	if m != nil {
		return m.Message
	}
	return nil
}

// Bucket is a construct to hold multiple items within itself. This
// abstraction contains multiple buckets of the same kind within itself and
// shares amont them the items that get inserted. When the bucket as a whole
// gets too big to hold more items, the contained buckets gets pushed out only
// to become independent buckets. Hence, this can grow infinitely in terms of
// storage space for items that get inserted.
type Bucket struct {
	// Key is the storage path where the bucket gets stored
	Key string `sentinel:"" protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Items holds the items contained within this bucket
	Items []*Item `sentinel:"" protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// Buckets are the buckets contained within this bucket
	Buckets map[string]*Bucket `sentinel:"" protobuf:"bytes,3,rep,name=buckets,proto3" json:"buckets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Sharded indicates if the contained buckets are pushed out or not
	Sharded bool `sentinel:"" protobuf:"varint,4,opt,name=sharded,proto3" json:"sharded,omitempty"`
	// The number of shards created in this bucket
	ShardCount uint32 `sentinel:"" protobuf:"varint,5,opt,name=shard_count,json=shardCount,proto3" json:"shard_count,omitempty"`
	// Size of this bucket in number of bytes
	Size                 uint32   `sentinel:"" protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bucket) Reset()         { *m = Bucket{} }
func (m *Bucket) String() string { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()    {}
func (*Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0e98c66c4f51b7f, []int{1}
}

func (m *Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bucket.Unmarshal(m, b)
}
func (m *Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bucket.Marshal(b, m, deterministic)
}
func (m *Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bucket.Merge(m, src)
}
func (m *Bucket) XXX_Size() int {
	return xxx_messageInfo_Bucket.Size(m)
}
func (m *Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_Bucket proto.InternalMessageInfo

func (m *Bucket) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Bucket) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Bucket) GetBuckets() map[string]*Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

func (m *Bucket) GetSharded() bool {
	if m != nil {
		return m.Sharded
	}
	return false
}

func (m *Bucket) GetShardCount() uint32 {
	if m != nil {
		return m.ShardCount
	}
	return 0
}

func (m *Bucket) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterType((*Item)(nil), "storagepacker.Item")
	proto.RegisterType((*Bucket)(nil), "storagepacker.Bucket")
	proto.RegisterMapType((map[string]*Bucket)(nil), "storagepacker.Bucket.BucketsEntry")
}

func init() { proto.RegisterFile("helper/storagepacker/types.proto", fileDescriptor_c0e98c66c4f51b7f) }

var fileDescriptor_c0e98c66c4f51b7f = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4b, 0xf4, 0x30,
	0x10, 0xc6, 0x69, 0xf7, 0xdf, 0xfb, 0xce, 0xba, 0x22, 0x51, 0x21, 0xee, 0xc5, 0xb2, 0xa7, 0x8a,
	0x90, 0xe0, 0x7a, 0x11, 0xf1, 0xe2, 0x8a, 0x82, 0x47, 0x73, 0xf4, 0x22, 0x69, 0x3b, 0xb6, 0x65,
	0xdb, 0xa6, 0x24, 0xe9, 0x42, 0xfd, 0x3e, 0x7e, 0x4f, 0xd9, 0x74, 0x0b, 0xae, 0xec, 0xa9, 0xd3,
	0x79, 0x7e, 0x79, 0xe6, 0xc9, 0x04, 0x82, 0x0c, 0x8b, 0x1a, 0x35, 0x37, 0x56, 0x69, 0x99, 0x62,
	0x2d, 0xe3, 0x35, 0x6a, 0x6e, 0xdb, 0x1a, 0x0d, 0xab, 0xb5, 0xb2, 0x8a, 0xcc, 0xf6, 0xa4, 0xf9,
	0x45, 0xaa, 0x54, 0x5a, 0x20, 0x77, 0x62, 0xd4, 0x7c, 0x72, 0x59, 0xb5, 0x1d, 0xb9, 0x78, 0x81,
	0xe1, 0xab, 0xc5, 0x92, 0x1c, 0x83, 0x9f, 0x27, 0xd4, 0x0b, 0xbc, 0xf0, 0xbf, 0xf0, 0xf3, 0x84,
	0x30, 0x98, 0x94, 0x68, 0x8c, 0x4c, 0x91, 0xfa, 0x81, 0x17, 0x4e, 0x97, 0x67, 0xac, 0x33, 0x61,
	0xbd, 0x09, 0x7b, 0xac, 0x5a, 0xd1, 0x43, 0x8b, 0x6f, 0x1f, 0xc6, 0xab, 0x26, 0x5e, 0xa3, 0x25,
	0x27, 0x30, 0x58, 0x63, 0xbb, 0xf3, 0xda, 0x96, 0xe4, 0x0a, 0x46, 0xb9, 0xc5, 0xd2, 0x50, 0x3f,
	0x18, 0x84, 0xd3, 0xe5, 0x29, 0xdb, 0x8b, 0xc7, 0xb6, 0x01, 0x44, 0x47, 0x90, 0x07, 0x98, 0x44,
	0xce, 0xc6, 0xd0, 0x81, 0x83, 0x17, 0x7f, 0xe0, 0x6e, 0xc8, 0xee, 0x63, 0x9e, 0x2b, 0xab, 0x5b,
	0xd1, 0x1f, 0x21, 0x14, 0x26, 0x26, 0x93, 0x3a, 0xc1, 0x84, 0x0e, 0x03, 0x2f, 0xfc, 0x27, 0xfa,
	0x5f, 0x72, 0x09, 0x53, 0x57, 0x7e, 0xc4, 0xaa, 0xa9, 0x2c, 0x1d, 0x05, 0x5e, 0x38, 0x13, 0xe0,
	0x5a, 0x4f, 0xdb, 0x0e, 0x21, 0x30, 0x34, 0xf9, 0x17, 0xd2, 0xb1, 0x53, 0x5c, 0x3d, 0x7f, 0x83,
	0xa3, 0xdf, 0x73, 0x0e, 0xdc, 0xec, 0x1a, 0x46, 0x1b, 0x59, 0x34, 0xfd, 0x92, 0xce, 0x0f, 0x86,
	0x15, 0x1d, 0x73, 0xef, 0xdf, 0x79, 0xab, 0x9b, 0x77, 0x9e, 0xe6, 0x36, 0x6b, 0x22, 0x16, 0xab,
	0x92, 0x67, 0xd2, 0x64, 0x79, 0xac, 0x74, 0xcd, 0x37, 0xb2, 0x29, 0x2c, 0x3f, 0xf4, 0xb0, 0xd1,
	0xd8, 0x6d, 0xfc, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xb0, 0x6d, 0x06, 0xf7, 0x01, 0x00,
	0x00,
}
