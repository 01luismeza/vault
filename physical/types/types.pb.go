// Code generated by protoc-gen-go. DO NOT EDIT.
// source: physical/types/types.proto

package types // import "github.com/hashicorp/vault/physical/types"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SealWrapEntry struct {
	Ciphertext           []byte   `protobuf:"bytes,1,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	Wrapped              bool     `protobuf:"varint,4,opt,name=wrapped,proto3" json:"wrapped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SealWrapEntry) Reset()         { *m = SealWrapEntry{} }
func (m *SealWrapEntry) String() string { return proto.CompactTextString(m) }
func (*SealWrapEntry) ProtoMessage()    {}
func (*SealWrapEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_59e5640f90e1a56c, []int{0}
}
func (m *SealWrapEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SealWrapEntry.Unmarshal(m, b)
}
func (m *SealWrapEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SealWrapEntry.Marshal(b, m, deterministic)
}
func (dst *SealWrapEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SealWrapEntry.Merge(dst, src)
}
func (m *SealWrapEntry) XXX_Size() int {
	return xxx_messageInfo_SealWrapEntry.Size(m)
}
func (m *SealWrapEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SealWrapEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SealWrapEntry proto.InternalMessageInfo

func (m *SealWrapEntry) GetCiphertext() []byte {
	if m != nil {
		return m.Ciphertext
	}
	return nil
}

func (m *SealWrapEntry) GetWrapped() bool {
	if m != nil {
		return m.Wrapped
	}
	return false
}

func init() {
	proto.RegisterType((*SealWrapEntry)(nil), "physical.SealWrapEntry")
}

func init() { proto.RegisterFile("physical/types/types.proto", fileDescriptor_types_59e5640f90e1a56c) }

var fileDescriptor_types_59e5640f90e1a56c = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0xc8, 0xa8, 0x2c,
	0xce, 0x4c, 0x4e, 0xcc, 0xd1, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0x86, 0x90, 0x7a, 0x05, 0x45, 0xf9,
	0x25, 0xf9, 0x42, 0x1c, 0x30, 0x39, 0x25, 0x4f, 0x2e, 0xde, 0xe0, 0xd4, 0xc4, 0x9c, 0xf0, 0xa2,
	0xc4, 0x02, 0xd7, 0xbc, 0x92, 0xa2, 0x4a, 0x21, 0x39, 0x2e, 0xae, 0xe4, 0xcc, 0x82, 0x8c, 0xd4,
	0xa2, 0x92, 0xd4, 0x8a, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x24, 0x11, 0x21, 0x09,
	0x2e, 0xf6, 0xf2, 0xa2, 0xc4, 0x82, 0x82, 0xd4, 0x14, 0x09, 0x16, 0x05, 0x46, 0x0d, 0x8e, 0x20,
	0x18, 0xd7, 0x49, 0x3b, 0x4a, 0x33, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57,
	0x3f, 0x23, 0xb1, 0x38, 0x23, 0x33, 0x39, 0xbf, 0xa8, 0x40, 0xbf, 0x2c, 0xb1, 0x34, 0xa7, 0x44,
	0x1f, 0xd5, 0x35, 0x49, 0x6c, 0x60, 0x87, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x04, 0x12,
	0x01, 0x85, 0xa6, 0x00, 0x00, 0x00,
}
